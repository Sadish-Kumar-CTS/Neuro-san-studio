name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main
      - DSG-actions
      - blah-blah
  release:
    types: [published]  # Triggers when a GitHub Release is published
  workflow_dispatch:  # Allow manual runs if needed

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write  # (for future OIDC auth if you want)

    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Request GitHub OIDC Token
        id: oidc
        run: |
          echo "TOKEN=$(curl -s -H 'Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN' \
            "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com")" >> $GITHUB_ENV
        env:
          ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTIONS_ID_TOKEN_REQUEST_URL: ${{ secrets.ACTIONS_ID_TOKEN_REQUEST_URL }}

      - name: Decode OIDC Token
        run: |
          echo "Decoded OIDC token:"
          echo "${{ env.TOKEN }}" | jq -R 'split(".") | .[1] | @base64d | fromjson'
          exit 1

      - name: Set up variables
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "IMAGE_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          else
            SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
            echo "IMAGE_TAG=${SHORT_SHA}" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::634208487213:role/Github-ECR
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.NEURO_SAN_DEMOS_ECR_REPO }}:${{ env.IMAGE_TAG }}

